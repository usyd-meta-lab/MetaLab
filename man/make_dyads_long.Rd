% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_dyads_long.R
\name{make_dyads_long}
\alias{make_dyads_long}
\title{Build dyadic data (male–female) from long records, with optional APIM format}
\usage{
make_dyads_long(
  data,
  couple_id = "Couple_ID",
  person_id = "Prolific_ID",
  time_var = "Time",
  within_vars = "Strategy",
  gender_var = "T1A_Demo_Gender",
  male_code = 1,
  female_code = 2,
  measure_vars = NULL,
  agg = dplyr::first,
  agg_na_rm = TRUE,
  require_mf = TRUE,
  require_complete = FALSE,
  output = c("dyad_wide", "apim_long")
)
}
\arguments{
\item{data}{A data frame (or tibble) in long format with one row per person
per within-person combination (e.g., \code{Time} × \code{Strategy}).}

\item{couple_id}{String. Name of the dyad identifier column (default \code{"Couple_ID"}).}

\item{person_id}{String. Name of the person identifier column (default \code{"Prolific_ID"}).}

\item{time_var}{String. Name of the time variable column (default \code{"Time"}).}

\item{within_vars}{Character vector of additional within-person factor names
to retain at the dyadic level (e.g., \code{"Strategy"}). Use \code{character(0)} to
collapse across all within-person factors given by \code{agg}.}

\item{gender_var}{String. Name of the gender/sex column used to label
partners as male/female (default \code{"T1A_Demo_Gender"}).}

\item{male_code, female_code}{Scalars indicating which values of \code{gender_var}
correspond to male and female (defaults \code{1} and \code{2} respectively).}

\item{measure_vars}{Character vector of measure columns to split/duplicate.
If \code{NULL} (default), includes all columns not in \verb{\{couple_id, person_id, time_var, within_vars, gender_var\}}.}

\item{agg}{A function to reduce multiple rows within the same
\verb{(person × time × within)} cell (default \code{dplyr::first}). Common choices:
\code{mean}, \code{median}, etc.}

\item{agg_na_rm}{Logical. If \code{TRUE}, and if \code{agg} supports \code{na.rm}, pass
\code{na.rm = TRUE} during aggregation (default \code{TRUE}).}

\item{require_mf}{Logical. If \code{TRUE} (default), drop dyads that are not
mixed-sex (same-sex or ambiguous).}

\item{require_complete}{Logical. If \code{TRUE}, keep only rows where both male
and female have non-\code{NA} values for \strong{all} \code{measure_vars} (applies to the
dyad-wide stage before APIM construction).}

\item{output}{One of \code{c("dyad_wide", "apim_long")}. If \code{"dyad_wide"} (default),
returns wide columns with \verb{_male}/\verb{_female} suffixes. If \code{"apim_long"},
returns the double-entry APIM table with \code{actor_}/\code{partner_} columns.}
}
\value{
\itemize{
\item If \code{output = "dyad_wide"}: a tibble with one row per
\verb{(couple_id, time_var, within_vars...)} and columns
\verb{\{measure_vars\}_male}, \verb{\{measure_vars\}_female},
plus \verb{\{person_id\}_male} / \verb{\{person_id\}_female}.
\item If \code{output = "apim_long"}: a tibble with \strong{two rows} per dyad/time/within,
columns: \code{actor_id}, \code{partner_id}, \code{role}, and for every \code{v} in
\code{measure_vars}, \code{actor_v} and \code{partner_v}.
}
}
\description{
Converts long-format couple data (one row per person per within-person
combination) into either:
\itemize{
\item \strong{Dyad-wide} format (\code{output = "dyad_wide"}): one row per
\verb{(couple_id, time_var, within_vars...)} with paired columns suffixed
\verb{_male} and \verb{_female}.
\item \strong{APIM double-entry} (\code{output = "apim_long"}): two rows per dyad/time/within,
where each row treats one partner as the \strong{actor} and the other as the
\strong{partner}, producing columns \verb{actor_<var>} and \verb{partner_<var>}, plus
\code{actor_id}, \code{partner_id}, and a \code{role} indicator (\code{"male"}/\code{"female"}).
}
}
\details{
The function:
\enumerate{
\item Labels partner sex using \code{gender_var} and optionally filters to mixed-sex
dyads (\code{require_mf = TRUE}).
\item Aggregates duplicated records within each \verb{(couple_id, sex, time_var, within_vars...)} using \code{agg}.
\item Produces dyad-wide columns or, if requested, constructs APIM long rows by
mapping male→actor/female→partner and the reverse.
}

Distinguishability is assumed via gender (male/female). If your dyads are
indistinguishable, you may need additional coding choices not covered here.
}
\examples{
\dontrun{
library(dplyr)

df <- tibble::tibble(
  Couple_ID = c(1,1,1,1,2,2),
  Prolific_ID = c("a","b","a","b","c","d"),
  Time = c(1,1,2,2,1,1),
  Strategy = c("DA","DA","DA","DA","DB","DB"),
  T1A_Demo_Gender = c(1,2,1,2,1,2),  # 1=male, 2=female
  intrinsic = c(4.7, 4.9, 4.2, 4.8, 3.5, 3.7),
  extrinsic = c(4.5, 4.6, 4.1, 4.4, 3.2, 3.4)
)

# Dyad-wide
dw <- make_dyads_long(
  df,
  couple_id    = "Couple_ID",
  person_id    = "Prolific_ID",
  time_var     = "Time",
  within_vars  = "Strategy",
  gender_var   = "T1A_Demo_Gender",
  male_code    = 1,
  female_code  = 2,
  measure_vars = c("intrinsic", "extrinsic"),
  output       = "dyad_wide"
)

# APIM double-entry
ap <- make_dyads_long(
  df,
  couple_id    = "Couple_ID",
  person_id    = "Prolific_ID",
  time_var     = "Time",
  within_vars  = "Strategy",
  gender_var   = "T1A_Demo_Gender",
  male_code    = 1,
  female_code  = 2,
  measure_vars = c("intrinsic", "extrinsic"),
  output       = "apim_long"
)
}

}
\seealso{
\itemize{
\item \code{tidyr::pivot_wider()} for the dyad-wide pivot
\item APIM resources (e.g., Kenny, Kashy, & Cook) for modeling details
}
}
