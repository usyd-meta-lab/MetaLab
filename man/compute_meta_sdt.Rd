% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compute_meta_sdt.R
\name{compute_meta_sdt}
\alias{compute_meta_sdt}
\title{Compute per-participant d′, meta-d′ and M-ratio (metaSDT)}
\usage{
compute_meta_sdt(
  data,
  id = "participant_id",
  stim = "stim",
  resp = "resp",
  conf = "conf",
  stim_present = "S1",
  resp_present = "S1",
  K = 6,
  pad_zero = 0,
  add_constant = TRUE
)
}
\arguments{
\item{data}{Data frame; one row = one trial.}

\item{id}{Name of the participant-ID column.}

\item{stim}{Name of the stimulus column.}

\item{resp}{Name of the response column.}

\item{conf}{Name of the confidence column (integer 1…K, low→high).}

\item{stim_present}{Value of \emph{stim} that means “signal present” (S2).
All other values are treated as S1.}

\item{resp_present}{Value of \emph{resp} that means “responded signal present”.
All other values are treated as S1.}

\item{K}{Number of confidence levels.}

\item{pad_zero}{Constant to add to empty cells (log–linear correction).
Set 0 to skip padding.}

\item{add_constant}{Passed through to \strong{metaSDT::fit_meta_d_MLE()}.}
}
\value{
Tibble with one row per participant:
\itemize{
\item \code{id}          – participant identifier
\item \code{d_prime}     – type-1 d′ (aka da)
\item \code{meta_d_prime}– meta-d′
\item \code{m_ratio}     – meta-d′ / d′
}
}
\description{
A tidy, pipe-friendly wrapper around \strong{metaSDT::fit_meta_d_MLE()} that
reproduces the counting logic you prototyped (s1_hi_to_lo / s2_lo_to_hi)
but works with arbitrary column names and coding conventions.
}
\examples{
out <- compute_meta_sdt(
  dots,
  id            = "participant_id",
  stim          = "target_left",
  resp          = "response",
  conf          = "confidence",
  stim_present  = "true",
  resp_present  = "w",
  K  = "6"
)
}
