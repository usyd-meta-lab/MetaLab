% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_duplicate_attempts.R
\name{find_duplicate_attempts}
\alias{find_duplicate_attempts}
\title{Identify participants who uploaded data in more than one source file}
\usage{
find_duplicate_attempts(
  data,
  id_col = participant_id,
  file_col = source_file,
  quiet = FALSE
)
}
\arguments{
\item{data}{A data frame (or tibble) containing at least two columns:
one identifying participants and one identifying the file each record
came from.}

\item{id_col}{Bare (unquoted) column name that uniquely identifies each
participant.  Defaults to \code{participant_id}.}

\item{file_col}{Bare (unquoted) column name holding the file identifiers
(e.g. file path, file name, upload ID…).  Defaults to \code{source_file}.}

\item{quiet}{Logical.  If \code{FALSE} (default) the summary or confirmation
message is printed; if \code{TRUE} the function returns silently.}
}
\value{
A tibble with one row per participant who appears in \strong{more than one}
unique file, containing:
\itemize{
\item \code{participant_id} – the ID (same name as \code{id_col});
\item \code{n_files}        – number of different files detected; and
\item \code{files}          – a list column with the vector of file names/IDs.
}

The tibble is returned \strong{invisibly} so the printout is optional.
}
\description{
Flags “repeat” or \emph{duplicate} attempts in multi‑file datasets by locating
any \code{participant_id} associated with more than one distinct \code{source_file}.
The helper prints a compact summary (or a confirmation message if none are
found) and invisibly returns the same information as a tibble for further
processing.
}
\examples{
\dontrun{
library(dplyr)

# toy data --------------------------------------------------------
trial_data <- tibble(
  participant_id = c("P1", "P1", "P2", "P3", "P3", "P3"),
  source_file    = c("fileA.csv", "fileB.csv", "fileA.csv",
                     "fileC.csv", "fileC.csv", "fileD.csv"),
  rt             = runif(6)  # other columns irrelevant
)

# find repeat submissions ----------------------------------------
find_duplicate_attempts(trial_data)

# capture silently and filter the main dataset -------------------
dups <- find_duplicate_attempts(trial_data, quiet = TRUE)
clean_data <- anti_join(trial_data, dups, by = "participant_id")
}

}
\seealso{
\link{dplyr} for the verbs used under the hood.
}
